# Generated by Django 3.0.5 on 2020-04-04 05:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('s_class', models.IntegerField(primary_key=True, serialize=False)),
                ('prepare_level', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Goals',
            fields=[
                ('goal', models.IntegerField(primary_key=True, serialize=False)),
                ('goal_text', models.CharField(max_length=100)),
                ('goal_comment', models.TextField(blank=True, max_length=200, null=True)),
                ('goal_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Health_Card_Test',
            fields=[
                ('health_card', models.IntegerField(primary_key=True, serialize=False)),
                ('result_hc', models.TextField(blank=True, max_length=50, null=True)),
                ('hc_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('hc_date_add', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('pulse_before', models.IntegerField(blank=True, null=True)),
                ('pulse_after', models.IntegerField(blank=True, null=True)),
                ('pulse_rest', models.IntegerField(blank=True, null=True)),
                ('s_breath_hold', models.IntegerField(blank=True, null=True)),
                ('g_breath_hold', models.IntegerField(blank=True, null=True)),
                ('chest_rest', models.IntegerField(blank=True, null=True)),
                ('chest_inhale', models.IntegerField(blank=True, null=True)),
                ('chest_exhale', models.IntegerField(blank=True, null=True)),
                ('pulse_lying', models.IntegerField(blank=True, null=True)),
                ('pulse_stand', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MGPU_Group',
            fields=[
                ('mgpu_group', models.IntegerField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=50)),
                ('study_direction', models.TextField(blank=True)),
                ('course', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('question', models.IntegerField(primary_key=True, serialize=False)),
                ('question_text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Student_Profile',
            fields=[
                ('student', models.IntegerField(primary_key=True, serialize=False)),
                ('full_name_student', models.CharField(max_length=100)),
                ('health_group', models.CharField(max_length=30)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=150)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('student_photo', models.ImageField(blank=True, null=True, upload_to='images/students')),
                ('sex', models.CharField(blank=True, choices=[('w', 'женский'), ('m', 'мужской')], max_length=1, verbose_name='пол')),
                ('body_index', models.IntegerField(blank=True, null=True)),
                ('chest', models.IntegerField(blank=True, null=True)),
                ('signup_confirmation', models.BooleanField(default=False)),
                ('health_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Health_Card_Test')),
                ('mgpu_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.MGPU_Group')),
                ('prepare_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Classification')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tests',
            fields=[
                ('test', models.IntegerField(primary_key=True, serialize=False)),
                ('test_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('trainer', models.IntegerField(primary_key=True, serialize=False)),
                ('full_name_trainer', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Type_Of_Training',
            fields=[
                ('id_exercise', models.IntegerField(primary_key=True, serialize=False)),
                ('title_exercise', models.CharField(max_length=50)),
                ('translit_title_e', models.CharField(blank=True, max_length=210, verbose_name='Транслит')),
                ('link', models.CharField(blank=True, max_length=100)),
                ('exercise_description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('training', models.IntegerField(primary_key=True, serialize=False)),
                ('t_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('t_result', models.CharField(blank=True, max_length=100)),
                ('heart', models.IntegerField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('pace', models.IntegerField(blank=True, default=0)),
                ('distance', models.IntegerField(blank=True, null=True)),
                ('max_weig', models.IntegerField(blank=True, default=0, null=True)),
                ('rep', models.IntegerField(blank=True, default=0, null=True)),
                ('approach', models.IntegerField(blank=True, default=0, null=True)),
                ('pub_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('screen', models.ImageField(blank=True, null=True, upload_to='images/students')),
                ('advice', models.TextField(blank=True, max_length=200, null=True)),
                ('review', models.TextField(blank=True, max_length=200, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Type_Of_Training')),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Goals')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Student_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Test_Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Questions')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Tests')),
            ],
        ),
        migrations.CreateModel(
            name='Student_Answers',
            fields=[
                ('answer', models.IntegerField(primary_key=True, serialize=False)),
                ('answer_text', models.CharField(max_length=200)),
                ('ans_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('comment_tr', models.CharField(blank=True, max_length=200)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Questions')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Student_Profile')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Tests')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Trainer')),
            ],
        ),
        migrations.AddField(
            model_name='mgpu_group',
            name='trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Trainer'),
        ),
        migrations.AddField(
            model_name='health_card_test',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Student_Profile'),
        ),
        migrations.AddField(
            model_name='health_card_test',
            name='trainer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Trainer'),
        ),
        migrations.AddField(
            model_name='goals',
            name='answer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitapp.Student_Answers'),
        ),
        migrations.AddField(
            model_name='goals',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Trainer'),
        ),
        migrations.CreateModel(
            name='Competitions',
            fields=[
                ('competition', models.IntegerField(primary_key=True, serialize=False)),
                ('name_comp', models.CharField(max_length=50)),
                ('place', models.CharField(blank=True, max_length=50, null=True)),
                ('comp_date', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Student_Profile')),
            ],
        ),
        migrations.AddField(
            model_name='classification',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitapp.Student_Profile'),
        ),
    ]
